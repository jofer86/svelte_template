// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  hashedPassword String
  role           Role      @default(USER)
  profile        Profile?
  products       Product[]
  sessions       Session[]
  passwordResets PasswordReset[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Profile {
  id        String   @id @default(uuid())
  userId    String   @unique
  name      String?
  avatar    String?
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
}

model PasswordReset {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  usedAt    DateTime?

  @@index([token])
  @@index([userId])
}

model Product {
  id        String   @id @default(uuid())
  name      String
  sku       String   @unique
  price     Float
  ownerId   String
  owner     User     @relation(fields: [ownerId], references: [id])
  inventory Inventory[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
  @@index([sku])
}

model Warehouse {
  id        String      @id @default(uuid())
  name      String
  location  String
  capacity  Int
  inventory Inventory[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([name])
}

model Inventory {
  id          String    @id @default(uuid())
  warehouseId String
  productId   String
  quantity    Int
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([warehouseId, productId])
  @@index([warehouseId])
  @@index([productId])
}

enum Role {
  USER
  ADMIN
}

enum EmployeeRole {
  ADMIN
  MANAGER
  STAFF
}

model Employee {
  id             String      @id @default(uuid())
  firstName      String
  lastName       String
  email          String      @unique
  phone          String?
  role           EmployeeRole
  hashedPassword String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  @@index([email])
  @@index([role])
}
